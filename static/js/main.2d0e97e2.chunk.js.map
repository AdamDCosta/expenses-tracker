{"version":3,"sources":["components/ExpenseDate/ExpenseDate.jsx","components/Card/Card.jsx","components/ExpenseItem/ExpenseItem.jsx","components/ExpensesList/ExpensesList.jsx","components/ExpensesFilter/ExpensesFilter.jsx","components/Chart/ChartBar/ChartBar.jsx","components/Chart/Chart.jsx","components/ExpensesChart/ExpensesChart.jsx","components/Expenses/Expenses.jsx","components/NewExpense/ExpenseForm/ExpenseForm.jsx","components/NewExpense/NewExpense.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ExpenseDate","props","date","day","toLocaleString","month","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","filteredExpenses","length","map","expense","id","ExpensesFilter","onChangeFilter","selectedYear","value","onChange","event","target","ChartBar","label","maxValue","chartBarFillHeight","Math","round","style","height","Chart","dataPoints","dataPointValues","dataPoint","totalMaximum","max","ExpensesChart","expenses","chartDataPoints","getMonth","Expenses","useState","setSelectedYear","filteredExpensesJSX","filter","toString","ExpenseForm","onSaveExpenseData","onCancel","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","htmlFor","type","name","min","step","onClick","NewExpense","onAddExpense","isEditing","setIsEditing","enteredExpenseData","random","DUMMY_DATA","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d0e97e2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./ExpenseDate.scss\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const { date } = props;\r\n\r\n  const day = date.toLocaleString(\"en-UK\", { day: \"2-digit\" });\r\n  const month = date.toLocaleString(\"en-UK\", { month: \"long\" });\r\n  const year = date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <p className=\"expense-date__day\">{day}</p>\r\n      <p className=\"expense-date__month\">{month}</p>\r\n      <p className=\"expense-date__year\">{year}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React from 'react'\r\nimport \"./Card.scss\";\r\n\r\nconst Card = (props) => {\r\n\r\n  const classes = \"card \" + props.className;\r\n\r\n  return (\r\n    <div className={classes}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from \"react\";\r\nimport \"./ExpenseItem.scss\";\r\nimport ExpenseDate from \"../ExpenseDate/ExpenseDate\";\r\nimport Card from \"../Card/Card\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  const { title, amount, date } = props;\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{title}</h2>\r\n          <div className=\"expense-item__price\">Â£ {amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport \"./ExpensesList.scss\";\r\nimport ExpenseItem from \"../ExpenseItem/ExpenseItem\";\r\n\r\nconst ExpensesList = (props) => {\r\n  const { filteredExpenses } = props;\r\n\r\n  if (filteredExpenses.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>;\r\n  }\r\n\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {filteredExpenses.map((expense) => {\r\n        return (\r\n          <ExpenseItem\r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from 'react'\r\nimport \"./ExpensesFilter.scss\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n  const { onChangeFilter, selectedYear } = props\r\n\r\n  \r\n\r\n  const yearChangeHandler = (event) => {\r\n    onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <article className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={selectedYear} onChange={yearChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default ExpensesFilter\r\n","import React from \"react\";\r\nimport \"./ChartBar.scss\";\r\n\r\nconst ChartBar = (props) => {\r\n  const { label, value, maxValue } = props;\r\n\r\n  let chartBarFillHeight = \"0%\";\r\n\r\n  if (maxValue > 0) {\r\n    chartBarFillHeight = Math.round((value / maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: chartBarFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport \"./Chart.scss\";\r\nimport ChartBar from \"../Chart/ChartBar/ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const { dataPoints } = props;\r\n\r\n  const dataPointValues = dataPoints.map(dataPoint => dataPoint.value)\r\n  const totalMaximum = Math.max(...dataPointValues)\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {dataPoints.map((dataPoint) => {\r\n        return (\r\n          <ChartBar\r\n            key={dataPoint.label}\r\n            value={dataPoint.value}\r\n            maxValue={totalMaximum}\r\n            label={dataPoint.label}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react'\r\nimport Chart from '../Chart/Chart'\r\n\r\nconst ExpensesChart = (props) => {\r\n\r\n  const { expenses } = props;\r\n\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0},\r\n    { label: \"Feb\", value: 0},\r\n    { label: \"Mar\", value: 0},\r\n    { label: \"Apr\", value: 0},\r\n    { label: \"May\", value: 0},\r\n    { label: \"Jun\", value: 0},\r\n    { label: \"Jul\", value: 0},\r\n    { label: \"Aug\", value: 0},\r\n    { label: \"Sep\", value: 0},\r\n    { label: \"Oct\", value: 0},\r\n    { label: \"Nov\", value: 0},\r\n    { label: \"Dec\", value: 0}\r\n  ]\r\n\r\n  for (const expense of expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return (\r\n    <Chart dataPoints={chartDataPoints}/>\r\n  )\r\n}\r\n\r\nexport default ExpensesChart\r\n","import React, { useState } from \"react\";\r\nimport \"./Expenses.scss\";\r\nimport ExpensesList from \"../ExpensesList/ExpensesList\";\r\nimport Card from \"../Card/Card\";\r\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\r\nimport ExpensesChart from \"../ExpensesChart/ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const { expenses } = props;\r\n\r\n  const [selectedYear, setSelectedYear] = useState(\"2021\");\r\n\r\n  const expenseYearFilter = (year) => {\r\n    setSelectedYear(year);\r\n  };\r\n  \r\n  const filteredExpensesJSX = expenses.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === selectedYear;\r\n  })\r\n\r\n\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selectedYear={selectedYear}\r\n        onChangeFilter={expenseYearFilter}\r\n      />\r\n      <ExpensesChart expenses={filteredExpensesJSX} />\r\n      <ExpensesList filteredExpenses={filteredExpensesJSX} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.scss\";\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n  const { onSaveExpenseData, onCancel } = props\r\n\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  // one state approach below vvvv\r\n\r\n  // const [ userInput, setUserInput ] = useState({\r\n  //   enteredTitle: \"\",\r\n  //   enteredAmount: \"\",\r\n  //   enteredDate: \"\"\r\n  // })\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n\r\n    // setUserInput((prevState) => {\r\n    //   return {\r\n    //     ...prevState,\r\n    //     enteredTitle: event.target.value\r\n    //   }\r\n    // })\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"amount\">Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            value={enteredAmount}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"date\">Date</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            value={enteredDate}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpense.scss\";\r\nimport ExpenseForm from \"./ExpenseForm/ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const { onAddExpense } = props;\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    onAddExpense(expenseData);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const endEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={endEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_DATA = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n\n  const [ expenses, setExpenses ] = useState(DUMMY_DATA)\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses expenses={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}